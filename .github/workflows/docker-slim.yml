name: Docker Slim # Name of the workflow

#Only trigger, when the build workflow succeeded
on: # Set the event that will trigger the workflow
  workflow_run: # Workflow run event
    workflows: ["Docker Image CI"] # Workflow run event workflow
    types: # Workflow run event type
      - completed # Completed workflow run event type

# on: 
#   push:
#     branches: 
#       - 'master'

jobs: # Set a job
  build: # Set the job name
    runs-on: ubuntu-latest # Set the job to run on the latest version of Ubuntu
    if: github.repository_owner == 'alshedivat' # Set the condition to run the job

    defaults:
      run:
        working-directory: ${{ github.workspace }} # Set the working directory

    steps:
    - name: Checkout # Set the step name
      uses: actions/checkout@v3 # Use the checkout action

    - name: Login # Set the step name
      uses: docker/login-action@v2 # Use the login-action action
      with:
        username: ${{ secrets.DOCKER_USERNAME }} # Use the secrets.DOCKER_USERNAME secret
        password: ${{ secrets.DOCKER_PASSWORD }} # Use the secrets.DOCKER_PASSWORD secret
        
    - name: update docker-compose # Set the step name
      shell: bash # Set the shell
      run:  |
        sed -i "s|\.:|${{ github.workspace }}:|g" ${{ github.workspace }}/docker-compose.yml 
        cat ${{ github.workspace }}/docker-compose.yml 
        
    - uses: kitabisa/docker-slim-action@v1.0.3 # Use the docker-slim-action action
      env: # Set the environment variable
        DSLIM_PULL: true # Pull the image
        DSLIM_COMPOSE_FILE: ${{ github.workspace }}/docker-compose.yml # Set the docker-compose file
        DSLIM_TARGET_COMPOSE_SVC: jekyll # Set the docker-compose service
        DSLIM_CONTINUE_AFTER: signal # Continue after the signal
      with: # Set the input parameter
        target: amirpourmand/al-folio # Set the image name
        tag: "slim" # Set the image tag

    # Push to the registry
    - run: docker image push amirpourmand/al-folio:slim # Push the image
